@page "/Historico"
@using HealFit.Model
@using HealFit.Service
@inject IConsumoService ConsumoService
@inject NavigationManager Navigation
@inject IJSRuntime JS

<section class="content px-4">

    <h3>Historico</h3>

    <section class="w-100 d-flex flex-row justify-content-between align-items-center">

        <input type="date" @bind="dataPesquisada" class="form-control w-85" />
        <button class="btn btn-primary ms-3" @onclick="BuscarConsumo" > Buscar </button>        

    </section>


    <main class="mt-4">

        @foreach (var produto in produtosConsumidos) {

            <div class="m-2 p-2 border border-1 border-secondary d-flex flex-row justify-content-between align-items-center">
                <div>
                    <p>Produto:@produto.Produto</p>
                    <p>Quantidade:@produto.Quantidade @produto.MetricServingUnit</p>
                    <p>Calorias:@produto.Calories kcal</p>
                </div>
                <div class="d-flex flex-row h-50">
                    <button class="btn btn-info me-2" @onclick="() => Detalhes(produto.ConsumoId)">Detalhes</button>
                </div>
            </div>

        }

    </main>

</section>

@code {

    private List<ProdutoConsumido> produtosConsumidos = new List<ProdutoConsumido>();
    private DateTime dataPesquisada = DateTime.Now;

    private async Task BuscarConsumo() {

        var usuarioIdStr = await JS.InvokeAsync<string>("localStorage.getItem", "usuarioId");

        if (int.TryParse(usuarioIdStr, out var usuarioId)) {
            // Formata a data para o formato yyyy-MM-dd
            string dataFormatada = dataPesquisada.ToString("yyyy-MM-dd");

            produtosConsumidos = await ConsumoService.GetAllConsumoByDate(usuarioId, dataFormatada);
        }
        else {
            await DisplayAlert("Erro", "ID de usuário inválido ou não encontrado", "Ok");
        }
    }

    private async Task DisplayAlert(string title, string message, string cancel) {

        await Application.Current.MainPage.DisplayAlert(title, message, cancel);
    }

    private void Detalhes(int id) {

        Navigation.NavigateTo($"/Detalhes/{id}");

    }

}
